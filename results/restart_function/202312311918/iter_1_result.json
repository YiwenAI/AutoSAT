{"time": {"7": 1040.75, "8": 951.25}, "prompt": {"7": "void Solver::restart() {\n    // Reset the LBD related values\n    fast_lbd_sum = lbd_queue_size = lbd_queue_pos = 0;\n    // Backtrack to the root of the search tree\n    backtrack(0);\n    \n    // Adaptive strategy based on solver's performance\n    int phase_rand = rand() % 100;\n    double fast_lbd_avg = fast_lbd_sum / (double)lbd_queue_size;\n    double slow_lbd_avg = slow_lbd_sum / (double)conflicts;\n    \n    // Strategy 1: With a probability of 40%, use the current best phases if fast LBD average is promising\n    if (fast_lbd_avg < slow_lbd_avg && (phase_rand -= 40) < 0) {\n        for (int i = 1; i <= vars; i++) saved[i] = local_best[i];\n    }\n    // Strategy 2: With a probability of 30%, invert the current best phases if stuck in a local optimum\n    else if (fast_lbd_avg >= slow_lbd_avg && (phase_rand -= 30) < 0) {\n        for (int i = 1; i <= vars; i++) saved[i] = -local_best[i];\n    }\n    // Strategy 3: With a probability of 15%, rephase randomly to introduce diversity\n    else if ((phase_rand -= 15) < 0) {\n        for (int i = 1; i <= vars; i++) saved[i] = rand() % 2 ? 1 : -1;\n    }\n    // Strategy 4: With a probability of 15%, keep the phases as they are to exploit the current search space\n    // This is the implicit else case where no action is taken\n}", "8": "void Solver::restart() {\n    // Reset the LBD related values\n    fast_lbd_sum = lbd_queue_size = lbd_queue_pos = 0;\n    // Backtrack to the root of the search tree\n    backtrack(0);\n    // Probabilistic rephasing based on different criteria and solver's state\n    int phase_rand = rand() % 100;\n    double avg_lbd = (conflicts > 0) ? (double)slow_lbd_sum / conflicts : 0;\n    \n    // Strategy 1: With a probability of 40%, use the current best phases if average LBD is low\n    if ((phase_rand -= 40) < 0 && avg_lbd < 3.0) {\n        for (int i = 1; i <= vars; i++) saved[i] = local_best[i];\n    }\n    // Strategy 2: With a probability of 30%, invert the current best phases if average LBD is high\n    else if ((phase_rand -= 30) < 0 && avg_lbd >= 3.0) {\n        for (int i = 1; i <= vars; i++) saved[i] = -local_best[i];\n    }\n    // Strategy 3: With a probability of 15%, rephase based on variable activity\n    else if ((phase_rand -= 15) < 0) {\n        for (int i = 1; i <= vars; i++) {\n            saved[i] = (activity[i] > 1e4) ? -saved[i] : saved[i];\n        }\n    }\n    // Strategy 4: With a probability of 15%, rephase randomly\n    else {\n        for (int i = 1; i <= vars; i++) saved[i] = rand() % 2 ? 1 : -1;\n    }\n}"}}