{"time": {"10": 46, "12": 46, "9": 47}, "prompt": {"10": "void Solver::bump_var(int var, double coeff) {\n    double new_activity = activity[var] + var_inc * coeff;\n    if (new_activity <= 1e100) {           // Update score and prevent float overflow\n        activity[var] = new_activity;\n        if (vsids.inHeap(var)) vsids.update(var);                 // update heap\n    } else {\n        for (int i = 1; i <= vars; i++) activity[i] *= 1e-100;\n        var_inc *= 1e-100;\n        activity[var] = var_inc * coeff;\n        if (vsids.inHeap(var)) vsids.update(var);                 // update heap\n    }\n}", "12": "void Solver::bump_var(int var, double coeff) {\n    double new_activity = activity[var] + var_inc * coeff;\n    if (new_activity <= 1e100) {           // Update score and prevent float overflow\n        activity[var] = new_activity;\n        if (vsids.inHeap(var)) vsids.update(var);                 // update heap\n    } else {\n        for (int i = 1; i <= vars; i++) activity[i] *= 1e-100;\n        var_inc *= 1e-100;\n        activity[var] = var_inc * coeff;\n        if (vsids.inHeap(var)) vsids.update(var);                 // update heap\n    }\n}", "9": "void Solver::bump_var(int var, double coeff) {\n    double new_activity = activity[var] + var_inc * coeff;\n    if (new_activity <= 1e100) {           // Update score and prevent float overflow\n        activity[var] = new_activity;\n        if (vsids.inHeap(var)) vsids.update(var);                 // update heap\n    } else {\n        for (int i = 1; i <= vars; i++) activity[i] *= 1e-100;\n        var_inc *= 1e-100;\n        activity[var] = var_inc * coeff;\n        if (vsids.inHeap(var)) vsids.update(var);                 // update heap\n    }\n}"}, "PAR-2": {"10": 92, "12": 92, "9": 94}, "satisfiable": {}, "unsatisfiable": {}, "timeout": {}}