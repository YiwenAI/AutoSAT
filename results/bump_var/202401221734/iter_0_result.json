{"time": {"1": 13698, "2": 13965, "3": 11831, "4": 13641}, "prompt": {"1": "void Solver::bump_var(int var, double coeff) {\n    double new_activity = activity[var] + var_inc * coeff;\n    if (new_activity > 1e100) { // Rescale to prevent overflow\n        for (int i = 1; i <= vars; i++) activity[i] *= 1e-100;\n        var_inc *= 1e-100;\n        new_activity = activity[var] + var_inc * coeff; // Recalculate activity after rescaling\n    }\n    activity[var] = new_activity;\n    if (vsids.inHeap(var)) vsids.update(var); // Update the variable in the heap\n}", "2": "void Solver::bump_var(int var, double coeff) {\n    double new_activity = activity[var] + var_inc * coeff;\n    if (new_activity > 1e100) { // Rescale to prevent overflow\n        for (int i = 1; i <= vars; i++) activity[i] *= 1e-100;\n        var_inc *= 1e-100;\n        new_activity = activity[var] + var_inc * coeff; // Recalculate new activity after rescaling\n    }\n    activity[var] = new_activity;\n    if (vsids.inHeap(var)) vsids.update(var); // Update the variable in the heap\n}", "3": "void Solver::bump_var(int var, double coeff) {\n    activity[var] += var_inc * coeff; // Increase the activity of the variable by the increment times the coefficient.\n    if (activity[var] > 1e100) {     // Check for floating-point overflow.\n        for (int i = 1; i <= vars; i++) {\n            activity[i] *= 1e-100;   // Scale down all activities to prevent overflow.\n        }\n        var_inc *= 1e-100;           // Scale down the increment as well.\n    }\n    if (vsids.inHeap(var)) {\n        vsids.update(var);           // Update the variable in the heap if it's there.\n    }\n    var_inc *= (1 / 0.95);           // Apply a decay factor to the increment (e.g., 0.95).\n}", "4": "void Solver::bump_var(int var, double coeff) {\n    activity[var] += var_inc * coeff; // Increase activity by the increment multiplied by the coefficient\n    if (activity[var] > 1e100) {     // Check for overflow and rescale if necessary\n        for (int i = 1; i <= vars; i++) {\n            activity[i] *= 1e-100;\n        }\n        var_inc *= 1e-100;           // Adjust the increment as well\n    }\n    // Only update the heap if the variable is in it\n    if (vsids.inHeap(var)) {\n        vsids.update(var);\n    }\n}"}}